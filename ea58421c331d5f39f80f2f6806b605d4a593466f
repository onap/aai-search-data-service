{
  "comments": [
    {
      "key": {
        "uuid": "1a76adc5_ad7accba",
        "filename": "src/main/java/org/onap/aai/sa/searchdbabstraction/util/ElasticSearchPayloadTranslator.java",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1157
      },
      "writtenOn": "2018-09-13T13:10:56Z",
      "side": 1,
      "message": "Another behavior you could have in here pretty easily is a default behavior in absence of the es-payload-translation file.\n\nIf you pull out the file object:\n\nFile translationFile \u003d new File(pathToTranslationFile);\n\nif ( !translationFile.exists() ) {\n   // log(Payload translation skipped, assuming 2.4.1 syntax or something;\n   return source;\n} \n\n// do the rest of your flow",
      "range": {
        "startLine": 70,
        "startChar": 2,
        "endLine": 71,
        "endChar": 68
      },
      "revId": "ea58421c331d5f39f80f2f6806b605d4a593466f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_4d1f786c",
        "filename": "src/main/java/org/onap/aai/sa/searchdbabstraction/util/ElasticSearchPayloadTranslator.java",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1157
      },
      "writtenOn": "2018-09-13T13:17:45Z",
      "side": 1,
      "message": "You could wrap all of the translation logic in a general try {} catch (Exception e) {} block as means to handle parse exceptions of the translation file, and return the original source request.\n\nIn a way you would be trading one error, potentially for another.   Another idea would be to extract an interface for the PayloadTranslator and then wire-in specific ES payload translation implementations via spring-wiring dedicated to instances of elasticsearch.  Depending on the deployment model different translation implementation could be layered in without changing any code.\n\nJust some ideas...",
      "range": {
        "startLine": 72,
        "startChar": 2,
        "endLine": 72,
        "endChar": 18
      },
      "revId": "ea58421c331d5f39f80f2f6806b605d4a593466f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_4de458e0",
        "filename": "src/main/java/org/onap/aai/sa/searchdbabstraction/util/ElasticSearchPayloadTranslator.java",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 703
      },
      "writtenOn": "2018-09-13T12:52:00Z",
      "side": 1,
      "message": "This doesn\u0027t need to be declared outside of the for loop.",
      "range": {
        "startLine": 74,
        "startChar": 2,
        "endLine": 74,
        "endChar": 51
      },
      "revId": "ea58421c331d5f39f80f2f6806b605d4a593466f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a76adc5_0debc078",
        "filename": "src/main/java/org/onap/aai/sa/searchdbabstraction/util/ElasticSearchPayloadTranslator.java",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1157
      },
      "writtenOn": "2018-09-13T13:06:27Z",
      "side": 1,
      "message": "You probably should have some defensive code in here just in case the jsonObject does not contain the fields you expect to.  If an NPE is thrown from here is it handled gracefully anywhere?",
      "range": {
        "startLine": 77,
        "startChar": 2,
        "endLine": 80,
        "endChar": 52
      },
      "revId": "ea58421c331d5f39f80f2f6806b605d4a593466f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}